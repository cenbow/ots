<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mk.ots.pay.model.PPay">
 <resultMap id="BaseResultMap" type="com.mk.ots.pay.model.PPay" autoMapping="true" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="orderid" property="orderid" jdbcType="BIGINT" />
    <result column="orderprice" property="orderprice" jdbcType="DECIMAL" />
    <result column="lezhu" property="lezhu" jdbcType="DECIMAL" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="pmsorderno" property="pmsorderno" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="needreturn" property="needreturn" jdbcType="CHAR"/>
    <result column="neworderid" property="neworderid" jdbcType="BIGINT" />
    <result column="paysrc" property="paysrc" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="VARCHAR" />
    
    <association property="umember"  column="mid" javaType="com.mk.ots.member.model.UMember" select="findUMemberByMid"/>
	<association property="hotel"  column="hotelid" select="findTHotelByHotelId"/>
  </resultMap>
	
	<sql id="Base_Column_List" >
  	  id, mid, orderid, orderprice, lezhu, time, pmsorderno, hotelId, status, needReturn, newOrderId, paysrc,userid
  	</sql>
  
  
  <insert id="insert" parameterType="com.mk.ots.pay.model.PPay" useGeneratedKeys="true" keyProperty="id">
    insert into p_pay (mid, orderid, 
      orderprice, lezhu, time, 
      pmsorderno, hotelId, status, 
      needReturn, newOrderId, paysrc,userid
      )
    values (#{member.mid,jdbcType=BIGINT}, #{orderid,jdbcType=BIGINT}, 
      #{orderprice,jdbcType=DECIMAL}, #{lezhu,jdbcType=DECIMAL}, #{time,jdbcType=TIMESTAMP}, 
      #{pmsorderno,jdbcType=VARCHAR}, #{hotel.hotelid,jdbcType=BIGINT}, #{status,jdbcType=INTEGER,javaType=com.mk.ots.common.enums.PayTypeEnum}, 
      #{needreturn,jdbcType=CHAR,javaType=com.mk.ots.common.enums.NeedReturnEnum}, 
      #{neworderid,jdbcType=BIGINT}, #{paysrc,jdbcType=INTEGER, javaType=com.mk.ots.common.enums.PaySrcEnum},
      #{userid,jdbcType=VARCHAR}
      )
  </insert>
   	
  <update id="updateByPrimaryKeySelective"  parameterType="com.mk.ots.pay.model.PPay">
		update p_pay
	    <set >
	      <if test="member.mid != null" >
	        mid = #{member.mid,jdbcType=BIGINT},
	      </if>
	      <if test="orderid != null" >
	        orderid = #{orderid,jdbcType=BIGINT},
	      </if>
	      <if test="orderprice != null" >
	        orderprice = #{orderprice,jdbcType=DECIMAL},
	      </if>
	      <if test="lezhu != null" >
	        lezhu = #{lezhu,jdbcType=DECIMAL},
	      </if>
	      <if test="time != null" >
	        time = #{time,jdbcType=TIMESTAMP},
	      </if>
	      <if test="pmsorderno != null" >
	        pmsorderno = #{pmsorderno,jdbcType=VARCHAR},
	      </if>
	      <if test="hotel.hotelid != null" >
	        hotelId = #{hotel.hotelid,jdbcType=BIGINT},
	      </if>
	      <if test="status != null" >
	        status = #{status,jdbcType=INTEGER},
	      </if>
	      <if test="needreturn != null" >
	        needReturn = #{needreturn,jdbcType=CHAR},
	      </if>
	      <if test="neworderid != null" >
	        newOrderId = #{neworderid,jdbcType=BIGINT},
	      </if>
	      <if test="paysrc != null" >
	        paysrc = #{paysrc,jdbcType=INTEGER},
	      </if>
	    </set>
   		 where id = #{id,jdbcType=BIGINT}
	</update>
	
	<update id="updatePayByCancelOrder" parameterType="java.util.Map">
	   update p_pay  set 
	    status = #{status,jdbcType=INTEGER},
	    needReturn = #{needreturn,jdbcType=CHAR}
	  where id = #{id,jdbcType=BIGINT}
		 
	</update>
	
	<update id="updateUserIdByOrderId" parameterType="java.util.Map">
	   update p_pay  set userid=#{userid} where orderid = #{orderid}
	</update>
	
	
	
	<select id="findById" resultType="com.mk.ots.pay.model.PPay" resultMap="BaseResultMap"  parameterType="java.util.Map">
		select * from p_pay where id = #{id}
	</select>	
	
	<select id="findByOrderId" resultType="com.mk.ots.pay.model.PPay" resultMap="BaseResultMap" parameterType="java.util.Map">
		select * from p_pay where orderid = #{orderid}
	</select>
	
	<select id="countPPayByOrderId" resultType="long" parameterType="java.util.Map">
		select count(id) from p_pay where orderid = #{orderid} and paysrc = #{type, javaType=com.mk.ots.common.enums.PaySrcEnum}
	</select>
	
	<select id="countPPayByOrderId1" resultType="long" parameterType="java.util.Map">
		select count(id) from p_pay where orderid = #{orderid} and paysrc = #{type,jdbcType=INTEGER} 
	</select>
	
	<select id="findByOrderIdAndPaysrc" resultType="com.mk.ots.pay.model.PPay" resultMap="BaseResultMap"  parameterType="java.util.Map">
		select * from p_pay where orderid = #{orderid}   and  paysrc = #{type} 
	</select>

	<select id="findByUserId"  resultMap="BaseResultMap"  parameterType="java.util.Map">
		select * from p_pay where userId. = #{userId}
	</select>
	
	<select id="findUMemberByMid" resultType="com.mk.ots.member.model.UMember" parameterType="long" >
		select * from u_member where mid = #{mid}
	</select>	
	<select id="findTHotelByHotelId" resultType="com.mk.ots.hotel.model.THotel" parameterType="long">
		select * from t_hotel where id = #{id}
	</select>	
</mapper>